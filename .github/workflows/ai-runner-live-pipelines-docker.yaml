name: Build ai-runner live pipeline Docker images

on:
  pull_request:
    paths:
      - "runner/docker/Dockerfile.live-*"
      - "runner/app/**"
      - "runner/images/**"
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - "runner/docker/Dockerfile.live-*"
      - "runner/app/**"
      - "runner/images/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ !((github.ref_type == 'branch' && github.ref_name == 'main') || github.ref_type == 'tag') }}

jobs:
  build-common-base:
    name: Build common live base image
    permissions:
      pull-requests: read
    runs-on: [self-hosted, linux, amd64]
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 50
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            runner/docker/Dockerfile.live-base

      - name: Check if build needed
        id: check_build
        if: |
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'push' ||
          (
            github.event_name == 'pull_request' &&
            github.event.pull_request.head.repo.full_name == github.repository &&
            steps.changed-files.outputs.any_changed == 'true'
          )
        run: echo "should_build=true" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}

      - name: Build and push live-base image
        uses: docker/build-push-action@v6
        if: steps.check_build.outputs.should_build == 'true'
        with:
          context: "{{defaultContext}}:runner"
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: livepeer/ai-runner:live-base
          file: docker/Dockerfile.live-base
          cache-from: type=registry,ref=livepeerci/build:cache
          cache-to: type=registry,ref=livepeerci/build:cache,mode=max

  build-pipeline-images:
    name: Build pipeline images
    needs: build-common-base
    runs-on: [self-hosted, linux, amd64]
    permissions:
      pull-requests: read
    strategy:
      fail-fast: false
      matrix:
        pipeline: [comfyui]
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 50
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files_yaml: |
            base_dockerfile:
              - runner/docker/Dockerfile.live-base-${{ matrix.pipeline }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}

      - name: Build and push pipeline base image
        uses: docker/build-push-action@v6
        if: |
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'push' ||
          (
            github.event_name == 'pull_request' &&
            github.event.pull_request.head.repo.full_name == github.repository &&
            (
              steps.changed-files.outputs.base_dockerfile_any_changed == 'true'
            )
          )
        with:
          context: "{{defaultContext}}:runner"
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: livepeer/ai-runner:live-base-${{ matrix.pipeline }}
          file: docker/Dockerfile.live-base-${{ matrix.pipeline }}
          build-args: |
            PIPELINE=${{ matrix.pipeline }}
          cache-from: type=registry,ref=livepeerci/build:cache
          cache-to: type=registry,ref=livepeerci/build:cache,mode=max

      - name: Extract metadata for app image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: livepeer/ai-runner
          tags: |
            type=raw,value=live-app-${{ matrix.pipeline }}
            type=sha,prefix=live-app-${{ matrix.pipeline }}-
            type=ref,event=pr,prefix=live-app-${{ matrix.pipeline }}-
            type=ref,event=tag,prefix=live-app-${{ matrix.pipeline }}-
            type=raw,value=latest,enable={{is_default_branch}},prefix=live-app-${{ matrix.pipeline }}-

      - name: Build and push pipeline app image
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:runner"
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/Dockerfile.live-app__PIPELINE__
          build-args: |
            PIPELINE=${{ matrix.pipeline }}
            GIT_SHA=${{ (github.ref_type == 'tag' && github.ref_name) || (github.event.pull_request.head.sha || github.sha) }}
          cache-from: type=registry,ref=livepeerci/build:cache
          cache-to: type=registry,ref=livepeerci/build:cache,mode=max

  build-noop:
    name: Build pipeline image (noop)
    needs: build-common-base
    runs-on: ubuntu-20.04
    permissions:
      pull-requests: read
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 50
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            runner/docker/Dockerfile.live-app-noop
            runner/app/**

      - name: Check if build needed
        id: check_build
        if: |
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'push' ||
          (
            github.event_name == 'pull_request' &&
            github.event.pull_request.head.repo.full_name == github.repository &&
            steps.changed-files.outputs.any_changed == 'true'
          )
        run: echo "should_build=true" >> $GITHUB_OUTPUT

      - name: Cleanup hosted runner
        uses: ./.github/actions/cleanup-runner
        if: steps.check_build.outputs.should_build == 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: livepeer/ai-runner
          tags: |
            type=raw,value=live-app-noop
            type=sha,prefix=live-app-noop-
            type=ref,event=pr,prefix=live-app-noop-
            type=ref,event=tag,prefix=live-app-noop-
            type=raw,value=latest,enable={{is_default_branch}},prefix=live-app-noop-

      - name: Build and push noop image
        uses: docker/build-push-action@v6
        if: steps.check_build.outputs.should_build == 'true'
        with:
          context: "{{defaultContext}}:runner"
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/Dockerfile.live-app-noop
          cache-from: type=registry,ref=livepeerci/build:cache
          cache-to: type=registry,ref=livepeerci/build:cache,mode=max
